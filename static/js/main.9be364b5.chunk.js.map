{"version":3,"sources":["components/Buttons.js","components/Counter.js","components/CounterList.js","lib/getRandomColor.js","containers/CounterListContainer.js","actions/index.js","actions/ActionTypes.js","containers/App.js","reducers/index.js","index.js"],"names":["Buttons","onCreate","onRemove","className","onClick","defaultProps","console","warn","Counter","number","color","index","onIncrement","onDecrement","onSetColor","onContextMenu","e","preventDefault","onDoubleClick","style","backgroundColor","CounterList","counters","counterList","map","counter","i","key","getRandomColor","Math","floor","random","CounterListContainer","connect","state","dispatch","type","actions","App","this","props","React","Component","initialState","action","slice","length","store","createStore","reducers","window","devToolsExtension","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9be364b5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Buttons.css';\n\nconst Buttons = ({onCreate, onRemove}) => (\n    <div className=\"Buttons\">\n        <div className=\"btn add\" onClick={onCreate}>생성</div>\n        <div className=\"btn remove\" onClick={onRemove}>제거</div>\n    </div>\n);\n\nButtons.propTypes = {\n    onCreate: PropTypes.func,\n    onRemove: PropTypes.func\n};\n\nButtons.defaultProps = {\n    onCreate: ()=>console.warn('onCreate not defined'),\n    onRemove: ()=>console.warn('onRemove not defined')\n};\n\nexport default Buttons;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Counter.css';\n\nconst Counter = ({number, color, index, onIncrement, onDecrement, onSetColor}) => {\n    return(\n        <div\n            className=\"Counter\"\n            onClick={()=>{onIncrement(index)}}\n            onContextMenu={(e)=>{\n                e.preventDefault();\n                onDecrement(index);\n            }}\n            onDoubleClick={()=>{onSetColor(index)}}\n            style={{\n                backgroundColor: color,\n            }}\n        >\n            {number}\n        </div>\n    )\n}\n\nCounter.propTypes = {\n    index: PropTypes.number,\n    number: PropTypes.number,\n    color: PropTypes.string,\n    onIncrement: PropTypes.func,\n    onDecrement: PropTypes.func,\n    onSetColor: PropTypes.func\n};\n\nCounter.defaultProps = {\n    index: 0,\n    number: 0,\n    color: 'black',\n    onIncrement: ()=> console.warn('onIncrement not defined'),\n    onDecrement: ()=> console.warn('onDecrement not defined'),\n    onSetColor: ()=> console.warn('onSetColor not defined')\n};\n\nexport default Counter;","import React from 'react';\nimport Counter from './Counter';\nimport PropTypes from 'prop-types';\n\nimport './CounterList.css';\n\nconst CounterList = ({counters, onIncrement, onDecrement, onSetColor})=>{\n    const counterList = counters.map(\n        (counter, i)=>(\n            <Counter\n                key={i}\n                index={i}\n                {...counter}\n                onIncrement={onIncrement}\n                onDecrement={onDecrement}\n                onSetColor={onSetColor}\n            />\n        )\n    );\n\n    return (\n        <div className=\"CounterList\">\n            {counterList}\n        </div>\n    )\n}\n\nCounterList.propTypes = {\n    counters: PropTypes.arrayOf(PropTypes.shape({\n        color: PropTypes.string,\n        number: PropTypes.number\n    })),\n    onIncrement: PropTypes.func,\n    onDecrement: PropTypes.func,\n    onSetColor: PropTypes.func\n}\n\nCounterList.defaultProps = {\n    counters: []\n}\n\nexport default CounterList;","export default function getRandomColor() {\n    const colors = [\n        '#495057',\n        '#f03e3e',\n        '#d6336c',\n        '#ae3ec9',\n        '#7048e8',\n        '#4263eb',\n        '#1c7cd6',\n        '#1098ad',\n        '#0ca678',\n        '#37b24d',\n        '#74b816',\n        '#f59f00',\n        '#f76707',\n    ];\n\n    const random = Math.floor(Math.random() * 13);\n    return colors[random];\n}","import CounterList from '../components/CounterList';\nimport * as actions from '../actions';\nimport { connect } from 'react-redux';\nimport getRandomColor from '../lib/getRandomColor';\n\nconst mapStateToProps = (state) => ({\n    counters: state.counters\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    onIncrement: (index) => dispatch(actions.increment(index)),\n    onDecrement: (index) => dispatch(actions.decrement(index)),\n    onSetColor: (index) => {\n        const color = getRandomColor();\n        dispatch(actions.setColor(index, color))\n    }\n});\n\nconst CounterListContainer = connect(mapStateToProps, mapDispatchToProps)(CounterList);\n\nexport default CounterListContainer;","import * as types from './ActionTypes';\n\nexport const increment = (index) => ({\n    type: types.INCREMENT,\n    index\n});\n\nexport const decrement = (index) => ({\n    type: types.DECREMENT,\n    index\n});\n\nexport const setColor = (index, color)=>({\n    type: types.SET_COLOR,\n    index,\n    color\n});\n\nexport const create = (color)=>({\n    type: types.CREATE,\n    color\n});\n\nexport const remove = ()=>({\n    type: types.REMOVE\n});","/* 증감 */\nexport const INCREMENT = 'INCREMENT';\nexport const DECREMENT = 'DECREMENT';\n\n/* 색상변경 */ \nexport const SET_COLOR = 'SET_COLOR';\n\n/* 추가삭제 */\nexport const CREATE = 'CREATE';\nexport const REMOVE = 'REMOVE';","import React from 'react';\nimport Buttons from '../components/Buttons';\nimport CounterListContainer from './CounterListContainer';\nimport getRandomColor from '../lib/getRandomColor';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nclass App extends React.Component {\n    render() {\n        const { onCreate, onRemove } = this.props;\n        return (\n            <div className=\"App\">\n                <Buttons\n                    onCreate={onCreate}\n                    onRemove={onRemove}\n                />\n                <CounterListContainer />\n            </div>\n        )\n    }\n}\n\n// 여기서 버튼은 State를 가질 필요가 없으므로 mapDispatchToProps만 전달한다.\nconst mapDispatchToProps = (dispatch) => ({\n    onCreate: () => dispatch(actions.create(getRandomColor())),\n    onRemove: () => dispatch(actions.remove())\n});\n\nexport default connect(null, mapDispatchToProps)(App);","import * as types from '../actions/ActionTypes';\n\nconst initialState = {\n    counters: [\n        {\n            color: 'black',\n            number: 0\n        }\n    ]\n}\n\nfunction counter(state = initialState, action) {\n    const { counters } = state;\n\n    switch (action.type) {\n        case types.INCREMENT:\n            return {\n                counters: [\n                    ...counters.slice(0, action.index),\n                    {\n                        ...counters[action.index],\n                        number: counters[action.index].number + 1,\n                    },\n                    ...counters.slice(action.index + 1, counters.length),\n                ]\n            };\n        case types.DECREMENT:\n            return {\n                counters: [\n                    ...counters.slice(0, action.index),\n                    {\n                        ...counters[action.index],\n                        number: counters[action.index].number - 1,\n                    },\n                    ...counters.slice(action.index+1, counters.length)\n                ]\n            };\n        case types.SET_COLOR:\n            return {\n                counters: [\n                    ...counters.slice(0, action.index),\n                    {\n                        ...counters[action.index],\n                        color: action.color\n                    },\n                    ...counters.slice(action.index+1, counters.length)\n                ]\n            };\n        case types.CREATE:\n            return {\n                counters: [\n                    ...counters,\n                    {\n                        color: action.color,\n                        number: 0\n                    }\n                ]\n            };\n        case types.REMOVE:\n            return {\n                counters: [\n                    ...counters.slice(0, counters.length - 1)\n                ]\n            };\n        default:\n            return state;\n    }\n}\n\nexport default counter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport { createStore } from 'redux';\nimport reducers from './reducers';\nimport { Provider } from 'react-redux';\n\n// reducer들을 넣은 store생성 + 확장 도구 사용 허가.\nconst store = createStore(reducers, window.devToolsExtension && window.devToolsExtension());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}